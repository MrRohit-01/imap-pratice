generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model School {
  id       Int      @id @default(autoincrement())
  name     String
  domain   String?
  users    User[]
  students Student[]
  classes  Class[]
  parents  Parent[]
}

model User {
  id           Int      @id @default(autoincrement())
  schoolId     Int
  email        String   @unique
  passwordHash String
  role         String
  createdAt    DateTime @default(now())
  school       School   @relation(fields: [schoolId], references: [id])

  @@index([schoolId])
}

model Student {
  id          Int              @id @default(autoincrement())
  schoolId    Int
  admissionNo String
  firstName   String
  lastName    String?
  dob         DateTime?
  createdAt   DateTime @default(now())
  school      School           @relation(fields: [schoolId], references: [id])
  parents     ParentLink[]
  classes     StudentClass[]
  attendance  Attendance[]
  grades      Grade[]

  @@unique([schoolId, admissionNo]) // avoids duplicate roll numbers in same school
  @@index([schoolId])
}

model Parent {
  id       Int          @id @default(autoincrement())
  schoolId Int
  name     String
  email    String?
  phone    String?
  school   School       @relation(fields: [schoolId], references: [id])
  students ParentLink[]

  @@index([schoolId])
}

model ParentLink {
  id        Int     @id @default(autoincrement())
  studentId Int
  parentId  Int
  student   Student @relation(fields: [studentId], references: [id])
  parent    Parent  @relation(fields: [parentId], references: [id])

  @@unique([studentId, parentId])
}

model Class {
  id        Int             @id @default(autoincrement())
  schoolId  Int
  name      String
  gradeLevel Int
  school    School          @relation(fields: [schoolId], references: [id])
  students  StudentClass[]
  attendance Attendance[]
  grades     Grade[]

  @@index([schoolId])
}

model StudentClass {
  id        Int     @id @default(autoincrement())
  studentId Int
  classId   Int
  student   Student @relation(fields: [studentId], references: [id])
  class     Class   @relation(fields: [classId], references: [id])

  @@unique([studentId, classId])
}

model Attendance {
  id        Int      @id @default(autoincrement())
  studentId Int
  classId   Int
  date      DateTime
  status    String
  student   Student  @relation(fields: [studentId], references: [id])
  class     Class    @relation(fields: [classId], references: [id])

  @@index([classId, date])
  @@index([studentId, date])
}

model Grade {
  id             Int      @id @default(autoincrement())
  studentId      Int
  classId        Int
  assessmentName String
  score          Int
  maxScore       Int
  student        Student  @relation(fields: [studentId], references: [id])
  class          Class    @relation(fields: [classId], references: [id])

  @@index([studentId])
  @@index([classId])
}
